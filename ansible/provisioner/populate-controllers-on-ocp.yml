---

- name: Add controllers as hosts
  hosts:
    - edge_management
  vars:
    _controller_admin_credentials: []
  pre_tasks:
    - name: Grab controller admin password
      ansible.builtin.shell:
        cmd: >
          oc get secret controller-admin-password
          -n student{{ student_number }}-workshop-{{ workshop_type | regex_replace('_', '-') }}
          -o go-template
          {% raw %}
          --template "{{.data.password|base64decode}}"
          {% endraw %}
      register: _controller_admin_credentials_raw
      loop: "{{ (range(1, (student_total + 1), 1)|list) }}"
      loop_control:
        loop_var: student_number
      retries: 600
      delay: 10
      until:
        - not _controller_admin_credentials_raw.failed
    
    - name: Add Controllers as hosts
      ansible.builtin.add_host:
        hostname: "controller-student{{ _student_controller.student_number }}-workshop-{{ workshop_type | regex_replace('_', '-') }}.apps.{{ openshift.name }}.{{ workshop_dns_zone }}"
        ansible_host: "{{ hostvars[groups['edge_management'].0].ansible_host }}"
        ansible_user: "{{ hostvars[groups['edge_management'].0].ansible_user }}"
        ansible_password: "{{ hostvars[groups['edge_management'].0].ansible_password }}"
        controller_hostname: "https://controller-student{{ _student_controller.student_number }}-workshop-{{ workshop_type | regex_replace('_', '-') }}.apps.{{ openshift.name }}.{{ workshop_dns_zone }}"
        controller_username: admin
        controller_password: "{{ _student_controller.stdout }}"
        student_number: "{{ _student_controller.student_number }}"
        groups: ansible_controllers
      loop: "{{ _controller_admin_credentials_raw.results }}"
      loop_control:
        loop_var: _student_controller

- name: Configure controllers
  hosts:
    - ansible_controllers
  serial: 10
  gather_facts: false
  roles:
    - ../roles/populate_controller
