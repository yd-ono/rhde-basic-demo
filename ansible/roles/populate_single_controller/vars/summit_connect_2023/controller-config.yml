---

_internal_controller_hostname: "controller.{{ ec2_name_prefix }}.{{ workshop_dns_zone }}"
controller_hostname: "{{ ansible_host }}:10443"
controller_validate_certs: false
controller_configuration_credentials_secure_logging: false

# These are configured for global use
controller_execution_environments:
  - name: Device Edge Workshops Execution Environment
    image: quay.io/device-edge-workshops/provisioner-execution-environment:latest
    pull: missing

controller_credential_types:
  - name: Contrller API Credentials
    kind: cloud
    inputs:
      fields:
        - id: controller_username
          type: string
          label: Controller API Username
        - id: controller_password
          type: string
          label: Controller API Password
          secret: true
    injectors:
      extra_vars:
        controller_hostname: "controller.{{ ec2_name_prefix }}.{{ workshop_dns_zone }}"
        controller_username: "{  { controller_username }}"
        controller_password: "{  { controller_password }}"
        controller_validate_certs: 'false'

# These can be templated out for all students
controller_organizations_yaml: |-
  {% for student_number in range(1, student_total + 1) %}
  - name: "Student{{ student_number }} Organization"
  {% endfor %}

controller_users_yaml: |-
  {% for student_number in range(1, student_total + 1) %}
  - username: "student{{ student_number }}"
    password: "{{ admin_password }}"
    email: "student{{ student_number }}@dont-email.me"
    organization: "Student{{ student_number }} Organization"
  {% endfor %}

controller_roles_yaml: |-
  {% for student_number in range(1, student_total + 1) %}
  - user: "student{{ student_number }}"
    organization: "Student{{ student_number }} Organization"
    role: admin
  {% endfor %}

controller_inventories_yaml: |-
  {% for student_number in range(1, student_total + 1) %}
  - name: Edge Devices
    organization: "Student{{ student_number }} Organization"
    variables:
      student_number: "{{ student_number }}"
  - name: Edge Utilities
    organization: "Student{{ student_number }} Organization"
    variables:
      student_number: "{{ student_number }}"
  - name: Local Actions
    organization: "Student{{ student_number }} Organization"
    variables:
      student_number: "{{ student_number }}"
  {% endfor %}

# These are student specific because we must query the API for credentials under the student user so we only see that student's credentials
# Loop over these by student number, which is slower but not bad
controller_hosts:
  - name: localhost
    inventory: Local Actions
    variables:
      ansible_connection: local
      ansible_python_interpreter: "{  { ansible_playbook_python }}"
  - name: "image-builder.{{ ec2_name_prefix }}.{{ workshop_dns_zone }}"
    inventory: Edge Utilities
    variables:
      ansible_host: "{{ ansible_host }}"

controller_credentials:
  - name: Gitea Credentials
    organization: "Student{{ student_number }} Organization"
    credential_type: Source Control
    inputs:
      username: "student{{ student_number }}"
      password: "{{ admin_password }}"
  - name: Device Credentials
    organization: "Student{{ student_number }} Organization"
    credential_type: Machine
    inputs:
      username: ansible
      password: "{{ admin_password }}"
      become_password: "{{ admin_password }}"
  - name: Controller API Credentials
    organization: "Student{{ student_number }} Organization"
    credential_type: Contrller API Credentials
    inputs:
      controller_username: "student{{ student_number }}"
      controller_password: "{{ admin_password }}"
  - name: Image Builder Credentials
    organization: "Student{{ student_number }} Organization"
    credential_type: Machine
    inputs:
      username: "{{ ansible_user }}"
      password: "{{ admin_password }}"
      become_password: "{{ admin_password }}"

controller_projects:
  - name: Device Edge Codebase
    organization: "Student{{ student_number }} Organization"
    scm_type: git
    scm_branch: main
    scm_url: https://gitea.{{ ec2_name_prefix }}.{{ workshop_dns_zone }}/student{{ student_number }}/device-edge-codebase.git
    credential: Gitea Credentials

controller_templates:
  - name: Compose Image via Image Builder
    organization: "Student{{ student_number }} Organization"
    inventory: Edge Utilities
    project: Device Edge Codebase
    playbook: playbooks/compose-image.yml
    credentials:
      - Device Credentials
    execution_environment: Device Edge Workshops Execution Environment
    extra_vars:
      builder_compose_type: edge-commit
      builder_compose_pkgs:
        - vim-enhanced
        - git
        - nano
        - NetworkManager-wifi
        - podman
        - microshift
        - microshift-greenboot
      builder_compose_customizations:
        files:
          - path: /etc/greenboot/check/required.d/application-check.sh
            mode: '0755'
            user: root
            group: root
            data: "#!/bin/bash\n\n/usr/bin/sleep 60\n\nRETURN_CODE=$(/usr/bin/curl -s -o /dev/null -w '%{http_code}' http://localhost:1881)\n\nif [ $RETURN_CODE = '200' ]; then\n    exit 0;\nelse\n    exit 1;\nfi"
          - path: /etc/systemd/system/deploy-pull-secret.service
            mode: '0644'
            user: root
            group: root
            data: "[Unit]\nDescription=Deploy pull secret\n\n[Service]\nType=oneshot\nExecStart=/bin/bash /etc/deploy-pull-secret.sh\nRemainAfterExit=yes\n\n[Install]\nWantedBy=multi-user.target"
          - path: /etc/deploy-pull-secret.sh
            mode: '0755'
            user: root
            group: root
            data: "#!/bin/bash\n\n/usr/bin/echo 'abc123' | base64 -d > /etc/crio/openshift-pull-secret"
          - path: /etc/microshift/manifests/process-control.yaml
            mode: '0644'
            user: root
            group: root
            data: "---\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: process-control\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: mqtt\nspec:\n  ports:\n  - port: 1883\n    protocol: TCP\n    targetPort: 1883\n  selector:\n    app: mqtt\n  type: NodePort\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mqtt-deployment\nspec:\n  selector:\n    matchLabels:\n      app: mqtt\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: mqtt\n    spec:\n      containers:\n        - name: mqtt\n          image: quay.io/device-edge-workshops/process-control-mqtt:1.0.0\n          ports:\n            - containerPort: 1883\n              name: mqtt-port\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: simulate-deployment\nspec:\n  selector:\n    matchLabels:\n      app: simulate\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: simulate\n    spec:\n      containers:\n        - name: simulate\n          image: quay.io/device-edge-workshops/process-control-simulate-k8s:1.0.0\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: control-deployment\nspec:\n  selector:\n    matchLabels:\n      app: control\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: control\n    spec:\n      containers:\n      - name: control\n        image: quay.io/device-edge-workshops/process-control-control-k8s:3.0.0\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: ui\nspec:\n  ports:\n  - port: 1881\n    protocol: TCP\n    targetPort: 1881\n  selector:\n    app: ui\n  type: NodePort\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: ui-deployment\nspec:\n  selector:\n    matchLabels:\n      app: ui\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: ui\n    spec:\n      containers:\n      - name: ui\n        image: quay.io/device-edge-workshops/process-control-ui-k8s:2.0.4\n        ports:\n          - containerPort: 1881\n            name: http-ui-port\n---\nkind: Route\napiVersion: route.openshift.io/v1\nmetadata:\n  name: ui\nspec:\n  path: /ui\n  to:\n    kind: Service\n    name: ui\n  port:\n    targetPort: 1881"
          - path: /etc/microshift/manifests/kustomization.yaml
            mode: '0644'
            user: root
            group: root
            data: "---\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nnamespace: process-control\nresources:\n  - process-control.yaml"
        firewall:
          ports:
            - '6443:tcp'
        services:
          enabled:
            - microshift
            - deploy-pull-secret
      builder_rhsm_repos:
        - "rhocp-4.13-for-rhel-{  { ansible_distribution_major_version }}-{  { ansible_architecture }}-rpms"
        - "fast-datapath-for-rhel-{  { ansible_distribution_major_version }}-{  { ansible_architecture }}-rpms"

