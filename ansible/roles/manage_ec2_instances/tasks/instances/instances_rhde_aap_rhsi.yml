---

- name: Hypervisor
  block:
    - name: Create hypervisor instance
      amazon.aws.ec2_instance:
        state: running
        network:
          assign_public_ip: true
        key_name: "{{ ec2_name_prefix }}-key"
        security_group: "{{ ec2_security_group }}"
        instance_type: "{{ ec2_info['edge-management'].size }}"
        image_id: "{{ hypervisor_node_ami.image_id }}"
        region: "{{ ec2_region }}"
        exact_count: 1
        filters:
          instance-state-name: running
          "tag:Workshop_hypervisor_node": "{{ ec2_name_prefix }}-hypervisor"
        tags:
          Workshop_hypervisor_node: "{{ ec2_name_prefix }}-hypervisor"
          Name: "{{ ec2_name_prefix }}-hypervisor"
          Workshop: "{{ ec2_name_prefix }}"
          uuid: "{{ ec2_name_prefix }}"
          guid: "{{ ec2_name_prefix }}"
          Workshop_type: "{{ workshop_type }}"
          AWS_USERNAME: "{{ aws_user }}"
          owner: "{{ aws_user }}"
          Info: "AWS_USERNAME that provisioned this-> {{ aws_user }}"
          Linklight: "This was provisioned through the linklight provisioner"
          short_name: "hypervisor"
          username: "{{ ec2_info['hypervisor'].username }}"
          ansible-workshops: "true"
          Students: "{{ student_total }}"
        wait: "{{ ec2_wait }}"
        vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
        volumes:
          - device_name: /dev/sda1
            ebs:
              volume_type: "{{ ec2_info['hypervisor'].disk_volume_type }}"
              volume_size: "{{ ec2_info['hypervisor'].disk_space }}"
              iops: "{{ ec2_info['hypervisor'].disk_iops }}"
              throughput: "{{ ec2_info['hypervisor'].disk_throughput }}"
              delete_on_termination: true
      register: hypervisor_node_create

    - name: grab instance ids to tag hypervisor node
      amazon.aws.ec2_instance_info:
        region: "{{ ec2_region }}"
        filters:
          instance-state-name: running
          "tag:Workshop_hypervisor_node": "{{ ec2_name_prefix }}-hypervisor"
      register: node1_output

    - name: Ensure tags are present for hypervisor node
      amazon.aws.ec2_tag:
        region: "{{ ec2_region }}"
        resource: "{{ item.1.instance_id }}"
        state: present
        tags:
          Name: "{{ ec2_name_prefix }}-hypervisor"
          Index: "{{ item[0] }}"
          launch_time: "{{ item.1.launch_time }}"
      with_indexed_items:
        - "{{ node1_output.instances }}"
      when: node1_output.instances|length > 0

    - name: Associate IAM instance profile with hypervisor node
      amazon.aws.ec2_instance:
        instance_ids: "{{ item.1.instance_id }}"
        region: "{{ ec2_region }}"
        instance_role: "VPCLockDown_{{ ec2_name_prefix }}_student{{ item.0 + 1 }}"
        state: running
        wait: true
      with_indexed_items:
        - "{{ node1_output.instances }}"
      register: associate_iam_instance_profile
      until: associate_iam_instance_profile is not failed
      retries: 12
      delay: 10
      when:
        - node1_output.instances | length > 0
        - tower_node_aws_api_access | default(false) | bool
