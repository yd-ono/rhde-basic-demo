---

- name: deploy application to k8s
  hosts:
    - all
  ignore_unreachable: yes
  module_defaults:
    kubernetes.core.k8s:
      kubeconfig: /tmp/kubeconfig
      validate_certs: false
  pre_tasks:
    - name: slurp up kubeconfig
      ansible.builtin.slurp:
        path: /var/lib/microshift/resources/kubeadmin/kubeconfig
      register: kubeconfig_raw
      become: true
    - name: create kubeconfig
      delegate_to: localhost
      ansible.builtin.copy:
        content: "{{ (kubeconfig_raw['content'] | b64decode).replace('localhost', ansible_host) }}"
        dest: /tmp/kubeconfig
    - name: allow API access
      ansible.posix.firewalld:
        port: 6443/tcp
        zone: public
        state: enabled
        immediate: true
        permanent: true
      become: true
  tasks:
    - name: make calls from localhost
      delegate_to: localhost
      block:
        - name: create namespace
          kubernetes.core.k8s:
            name: dgw
            kind: Namespace
            state: present
        - name: apply definitions
          kubernetes.core.k8s:
            namespace: process-control
            definition: "{{ lookup('file', yaml_file) | from_yaml }}"
          loop:
            - files/manifests/rhamq/statefulset.yaml
            - files/manifests/rhamq/headless-service.yaml
          loop_control:
            loop_var: yaml_file
        - name: get pod status
          kubernetes.core.k8s_info:
            kind: Pod
            label_selectors:
            - app = amq-broker
          register: pod_list
        - name: output Pod info
          debug:
            msg: |
               "{{ pod_list | json_query('resources[*].metadata.name')}} is {{ pod_list | json_query('resources[*].status.phase')}}"
        - name: get route status
          kubernetes.core.k8s_info:
            kind: Service
            name: amq-broker-hdls-svc
          register: service_list
        - name: output Service info
          debug:
            msg: "Check Access: {{ service_list | json_query('resources[*])}}"