- name: Register a client system to Ansible Controller
  hosts: localhost
  gather_facts: false

  vars:
    ansible_connection: local
    controller_url: "https://{{ controller_host }}/api/v2"
    controller_inventory: "Edge Systems"
    provisioning_template: "Provision Edge Device"

  module_defaults:
    ansible.builtin.uri:
      user: "{{ controller_api_username }}"
      password: "{{ controller_api_password }}"
      force_basic_auth: yes
      validate_certs: no

  tasks:

    - name: Fail if required variables are not provided
      ansible.builtin.fail:
        msg: "Required variable '{{ item }}' must be provided as an extra-var"
      loop:
        - controller_host
        - controller_api_username
        - controller_api_password
        - client_ipv4_address
      when: vars[item] is not defined

    - name: Find the ID of inventory '{{ controller_inventory }}'
      ansible.builtin.uri:
        url: "{{ controller_url }}/inventories/?name={{ controller_inventory | urlencode }}"
        method: GET
      register: controller_inventory_lookup

    - name: Set inventory ID
      ansible.builtin.set_fact:
        controller_inventory_id: "{{ controller_inventory_lookup.json.results[0].id }}"

    - name: Create host in inventory '{{ controller_inventory }}'
      ansible.builtin.uri:
        url: "{{ controller_url }}/inventories/{{ controller_inventory_id }}/hosts/"
        method: POST
        body_format: json
        body:
          name: "edge-{{ client_ipv4_address | replace('.', '-') }}"
          variables: |
            ansible_host: {{ client_ipv4_address }}
        status_code: [201, 400]
      register: create_host

    - name: Fail if host creation failed and not already exists
      ansible.builtin.fail:
        msg: "Host creation failed: {{ create_host.content }}"
      when:
        - create_host.status != 201
        - "'already exists' not in create_host.content"

    - name: Find the ID of workflow job template '{{ provisioning_template }}'
      ansible.builtin.uri:
        url: "{{ controller_url }}/workflow_job_templates/?name={{ provisioning_template | urlencode }}"
        method: GET
      register: job_template_lookup

    - name: Set workflow job template ID
      ansible.builtin.set_fact:
        job_template_id: "{{ job_template_lookup.json.results[0].id }}"

    - name: Launch provisioning job
      ansible.builtin.uri:
        url: "{{ controller_url }}/workflow_job_templates/{{ job_template_id }}/launch/"
        method: POST
        body_format: json
        body:
          extra_vars:
            target_host: "edge-{{ client_ipv4_address | replace('.', '-') }}"
        status_code: [201]
